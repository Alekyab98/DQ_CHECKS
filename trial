CREATE OR REPLACE PROCEDURE aid_nwperf_aether_core_tbls.aether_amf_performance_sptest(process_ts STRING,trans_ts STRING,window_hour int64,window_interval int64)
options(strict_mode=False)

BEGIN
 
merge into `vz-it-np-gudv-dev-dtwndo-0.aid_nwperf_aether_core_tbls.aether_amf_performance_counttest` tgt
using (
select
 event_time as event_time,
"ericsson" as  vendor,
fqdn,
KEY as metric_name,
safe_cast(increase_value as bignumeric) as metric_increase_value,
safe_cast(sum_value as bignumeric) as metric_sum_value,
trans_dt,
datetime(process_ts) as schedule_time,
current_timestamp as updated_timestamp,
datapoints_count as datapoints_count
from
(
WITH event_timestamps as
(
select distinct DATETIME_TRUNC(timestamp(`timestamp`),HOUR) as trans_hr from  `vz-it-pr-i37v-ndldo-0.vzn_ndl_aether_core_tbls_rd_v.ericsson_cnf_amf_raw_v1`
  where DATETIME_TRUNC(timestamp(insert_date_utc),HOUR) in
  unnest(GENERATE_TIMESTAMP_ARRAY(TIMESTAMP_SUB(DATETIME_TRUNC(timestamp(trans_ts),HOUR),INTERVAL window_interval-1 HOUR),DATETIME_TRUNC(timestamp(trans_ts),HOUR),INTERVAL window_hour HOUR))
--   and trans_dt=date(timestamp(trans_ts))
   and trans_dt is not null-- need to check
),

base_data AS (
  select *,
  MD5(labels) as checksum
  from(
  SELECT
  distinct
    TIMESTAMP_SECONDS(CAST(FLOOR(UNIX_SECONDS(`timestamp`)/(window_hour*60*60)) * (window_hour*60*60) AS INT64)) AS event_time,
    fqdn,
    TO_JSON_STRING(JSON_REMOVE(SAFE.PARSE_JSON(labels),'$.__name__','$.jobid','$.localdn')) as labels,
    JSON_VALUE(labels,'$.instance') as instance,
    lower(name) as KEY,
    SAFE_CAST(nullif(value,'NaN') AS FLOAT64) AS value,
    DATE(`timestamp`) AS trans_dt,
    `timestamp`,
  FROM
    `vz-it-pr-i37v-ndldo-0.vzn_ndl_aether_core_tbls_rd_v.ericsson_cnf_amf_raw_v1`
  WHERE
    DATETIME_TRUNC(timestamp(`timestamp`),HOUR) in (select trans_hr from event_timestamps)
    and insert_date_utc > (select min(trans_hr) from event_timestamps)
and trans_dt in (select date(trans_hr) from event_timestamps)
and trans_dt is not null
)),

window_data AS (
select *,if(value<prev_value,1,0) has_reset from (
select
   trans_dt,
   event_time,
   fqdn,
   labels,
   checksum,
   instance,
   KEY,
   value,
   `timestamp`,
SAFE_CAST(LAG(value) OVER (PARTITION BY fqdn, checksum, instance, KEY, DATETIME_TRUNC(timestamp,HOUR) ORDER BY `timestamp`) AS FLOAT64) AS prev_value
from base_data)
),

reset_adjusted AS (
  SELECT
    event_time,
    fqdn,
    instance,
    trans_dt,
    MAX(labels) AS labels,
    checksum,
    KEY,
    sum(value) as sum_value,
    SUM(CASE
        WHEN prev_value is NULL THEN 0
        WHEN has_reset =1 THEN value
        ELSE value - IFNULL(prev_value,0)
    END
      ) AS increase_value,
      count(value) as datapoints_count
  FROM
    window_data
  GROUP BY
  trans_dt,
    event_time,
    instance,
    fqdn,
    checksum,
    KEY )

SELECT
  event_time,
  fqdn,
  trans_dt,
  KEY,
  sum(increase_value) as increase_value,
  sum(sum_value) as sum_value,
  sum(datapoints_count) as datapoints_count
FROM
  reset_adjusted
group BY
  trans_dt,
    event_time,
    fqdn,
    KEY
order by
 trans_dt,
event_time,
fqdn,
KEY)
) src
ON tgt.trans_dt = src.trans_dt
    AND tgt.event_time = src.event_time
    AND tgt.fqdn = src.fqdn
    AND tgt.metric_name = src.metric_name
    AND tgt.vendor = src.vendor
    AND tgt.trans_dt IS NOT NULL
  WHEN MATCHED THEN
    UPDATE SET
      tgt.metric_increase_value = src.metric_increase_value,
      tgt.metric_sum_value = src.metric_sum_value,
      tgt.schedule_time = src.schedule_time,
      tgt.updated_timestamp = src.updated_timestamp,
      tgt.datapoints_count = src.datapoints_count  
  WHEN NOT MATCHED THEN
    INSERT (
      event_time,
      vendor,
      fqdn,
      metric_name,
      metric_increase_value,
      metric_sum_value,
      trans_dt,
      schedule_time,
      updated_timestamp,
      datapoints_count  
    )
    VALUES (
      src.event_time,
      src.vendor,
      src.fqdn,
      src.metric_name,
      src.metric_increase_value,
      src.metric_sum_value,
      src.trans_dt,
      src.schedule_time,
      src.updated_timestamp,
      src.datapoints_count  
    );
END;
